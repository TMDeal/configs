if !has('nvim')
    set nocompatible
    filetype plugin indent on
    syntax on
endif

nnoremap <SPACE> <NOP>
let g:mapleader="\<SPACE>"
let g:maplocalleader="\<SPACE>"

if has('nvim')
    let $EDITOR_ROOT=expand("$HOME/.config/nvim")
else
    let $EDITOR_ROOT=expand("$HOME/.vim")
endif

let g:root_markers=['.projectroot', '.git', 'manage.py', 'package.json', 'CMakeLists.txt', 'Makefile']

if !filereadable(expand($EDITOR_ROOT . '/autoload/plug.vim'))
    !curl -fLo $EDITOR_ROOT/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    call mkdir(expand($EDITOR_ROOT . '/bundle'), "p")
    au VimEnter * PlugInstall | source $MYVIMRC
endif

for dir in ['tmp/tags', 'templates', 'tmp/cache', 'tmp/backup', 'tmp/undo', 'tmp/swap']
    if !isdirectory(expand($EDITOR_ROOT . '/' . dir))
        call mkdir(expand($EDITOR_ROOT . '/' . dir), "p")
    endif
endfor

call g:plug#begin(expand('$EDITOR_ROOT/bundle'))
"python
Plug 'klen/python-mode', {'for': 'python'}
Plug 'heavenshell/vim-pydocstring', {'for': 'python', 'as': 'pydocstring'}
Plug 'jmcomets/vim-pony', {'on': [], 'as': 'pony'}
Plug 'tweekmonster/impsort.vim', {'for': 'python', 'as': 'impsort'}
Plug 'davidhalter/jedi-vim', {'for': 'python', 'as': 'jedi'}

"C/C++
Plug 'vim-scripts/DoxygenToolkit.vim', {'for': ['c', 'cpp'], 'as': 'doxygen'}
Plug 'derekwyatt/vim-fswitch', {'for': ['c', 'cpp'], 'as': 'fswitch'}
Plug 'drmikehenry/vim-headerguard', {'for': ['c', 'cpp'], 'as': 'headerguard'}
Plug 'derekwyatt/vim-protodef', {'for': ['c', 'cpp'], 'as': 'protodef'}
Plug 'richq/vim-cmake-completion', {'for': 'cmake', 'as': 'cmake-completion'}

"TeX
Plug 'lervag/vimtex', {'for': 'tex'}
Plug 'xuhdev/vim-latex-live-preview', {'for': 'tex', 'as': 'latex-live-preview'}
Plug 'rhysd/vim-grammarous', {'for': 'tex', 'as': 'grammarous'}

"Web
Plug 'vim-scripts/Emmet.vim', {'for': ['html', 'htmldjango', 'php', 'javascript', 'javascript.jsx', 'jinja'], 'as': 'emmet'}
Plug 'alvan/vim-closetag', {'as': 'closetag'}

"Javascript/Typescript
Plug 'heavenshell/vim-jsdoc', {'for': ['javascript', 'javascript.jsx', 'html'], 'as': 'jsdoc'}
Plug 'othree/jspc.vim', {'for': ['javascript', 'javascript.jsx', 'html'], 'as': 'jspc'}
Plug 'alampros/vim-react-keywords', {'for': ['javascript', 'javascript.jsx'], 'as': 'react-keywords'}
Plug 'bdauria/angular-cli.vim', {'on': [], 'as': 'angular-cli'}
" Plug 'Quramy/vim-js-pretty-template', {'on': ['JsPreTmpl', 'JsPreTmplClear'], 'as': 'js-pretty-templates'}

"Lint
Plug 'w0rp/ale'

"filetype syntax/indent
" I just want indent
Plug 'vim-scripts/Better-Javascript-Indentation', {'for': ['html'], 'do': 'rm -r syntax'}

Plug 'othree/javascript-libraries-syntax.vim', {'as': 'javascript-libraries-syntax'}
Plug 'mxw/vim-jsx', {'as': 'jsx'}
Plug 'lepture/vim-jinja', {'as': 'jinja'}
Plug 'pangloss/vim-javascript', {'as': 'javascript'}

let g:polyglot_disabled=['javascript', 'jsx']
Plug 'sheerun/vim-polyglot', {'as': 'polyglot'}

"Completion
Plug 'SirVer/ultisnips', functions#MaybeLoad(has('python'))
Plug 'Shougo/deoplete.nvim', functions#MaybeLoad(has('nvim'), {'do': ':UpdateRemotePlugins', 'as': 'deoplete'})
            \|Plug 'Shougo/context_filetype.vim', {'as': 'context_filetype'}
            \|Plug 'zchee/deoplete-jedi', {'for': ['python']}
            \|Plug 'zchee/deoplete-clang', {'for': ['c', 'cpp']}
            \|Plug 'carlitux/deoplete-ternjs'
            \|Plug 'ternjs/tern_for_vim', {'do': 'npm install', 'as': 'ternjs'}
            \|Plug 'mhartington/nvim-typescript', {'for': ['typescript'], 'as': 'deoplete-typescript'}
            \|Plug 'Shougo/neoinclude.vim', {'as': 'neoinclude'}

Plug 'ludovicchabant/vim-gutentags', functions#MaybeLoad(executable('ctags'), {'for': ['c', 'cpp'], 'as': 'gutentags'})
Plug 'majutsushi/tagbar', functions#MaybeLoad(executable('ctags'), {'on': 'TagbarToggle'})
Plug 'jeetsukumaran/vim-buffergator', {'on': ['BuffergatorToggle', 'BuffergatorMruCycleNext', 'BuffergatorMruCyclePrev'], 'as': 'buffergator'}
Plug 'godlygeek/tabular', {'on': 'Tabularize'}
Plug 'ctrlpvim/ctrlp.vim', {'on': 'CtrlP', 'as': 'ctrlp'}
Plug 'vim-scripts/YankRing.vim', {'as': 'yankring'}
Plug 'christoomey/vim-tmux-navigator', {'as': 'tmux-navigator'}
Plug 'jpalardy/vim-slime', {'as': 'slime'}
Plug 'sbdchd/neoformat', {'on': ['Neoformat']}
Plug 'brooth/far.vim', {'on': ['Far', 'Farp', 'Fardo', 'Refar', 'Farundo', 'F']}

Plug 'scrooloose/nerdtree', {'on': ['NERDTreeToggle']}
            \| Plug 'Xuyuanp/nerdtree-git-plugin', {'on': [], 'as': 'nerdtree-git'}

Plug 'dbakker/vim-projectroot', {'as': 'projectroot'}
Plug 'editorconfig/editorconfig-vim', {'on': [], 'as': 'editorconfig'}
Plug 'tpope/vim-eunuch', {'as': 'eunuch'}
Plug 'tomtom/tcomment_vim', {'as': 'tcomment'}
Plug 'embear/vim-localvimrc', {'on': [], 'as': 'localvimrc'}
Plug 'gcmt/taboo.vim', {'as': 'taboo'}
Plug 'Valloric/ListToggle', {'as': 'list-toggle'}
Plug 'Raimondi/delimitMate'
Plug 'lilydjwg/colorizer'
Plug 'EinfachToll/DidYouMean', {'as': 'did-you-mean'}
Plug 'Konfekt/FastFold', {'as': 'fast-fold'}

Plug 'tpope/vim-surround', {'as': 'surround'}
Plug 'tpope/vim-repeat', {'as': 'repeat'}
Plug 'adelarsq/vim-matchit', {'as': 'matchit'}
Plug 'kana/vim-textobj-user'
            \|Plug 'mjbrownie/django-template-textobjects', {'for': ['python', 'htmldjango', 'jinja']}

Plug 'tpope/vim-fugitive', {'on': [], 'as': 'fugitive'}
Plug 'airblade/vim-gitgutter', {'on': [], 'as': 'gitgutter'}

Plug 'nanotech/jellybeans.vim', {'as': 'jellybeans'}
Plug 'itchyny/lightline.vim', {'as': 'lightline'}
call g:plug#end()
